{"version":3,"sources":["api/FetchData.js","redux/store.js","components/User.js","components/CommentItem.js","components/CommentList.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["getPostsFromServer","response","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getCommentsFromServer","_context2","getUsersFromServer","_context3","store","createStore","state","action","type","Object","objectSpread2","isLoading","hasError","postsList","filter","item","id","payload","mixedPosts","_ref3","title","body","toLowerCase","includes","value","isLoaded","applyMiddleware","thunk","User","_ref","name","email","address","react_default","createElement","concat","city","CommentItem","className","CommentList","list","map","components_CommentItem","assign","key","connect","handleDelete","props","searchedText","comments","user","highlightText","text","split","RegExp","part","i","Fragment","Segment","color","Header","as","Button","negative","onClick","components_User","components_CommentList","PostList","posts","searchedResult","post","components_Post","loadPosts","dispatch","_ref2","postsData","usersData","commentsData","allData","Promise","all","slicedToArray","find","userId","comment","postId","handleSearch","_useState","useState","_useState2","inputValue","setInputValue","searchPosts","debounce","query","Input","icon","placeholder","onChange","target","slice","components_PostList","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8248f231.chunk.js","sourcesContent":["const POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst COMMENTS_URL = 'https://jsonplaceholder.typicode.com/comments';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getPostsFromServer = async() => {\n  const response = await fetch(POSTS_URL);\n\n  return response.json();\n};\n\nexport const getCommentsFromServer = async() => {\n  const response = await fetch(COMMENTS_URL);\n\n  return response.json();\n};\n\nexport const getUsersFromServer = async() => {\n  const response = await fetch(USERS_URL);\n\n  return response.json();\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { getUsersFromServer,\n  getPostsFromServer,\n  getCommentsFromServer } from '../api/FetchData';\n\nconst START_LOAD = 'START_LOAD';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_DELETE = 'HANDLE_DELETE';\nconst HANDLE_SEARCH = 'HANDLE_SEARCH';\n\nexport const startLoad = () => ({ type: START_LOAD });\n\nexport const handleSuccess = postsList => ({\n  type: HANDLE_SUCCESS, postsList,\n});\n\nexport const handleDelete = payload => ({\n  type: HANDLE_DELETE, payload,\n});\n\nexport const handleSearch = value => ({\n  type: HANDLE_SEARCH, value,\n});\n\nexport const loadPosts = () => async(dispatch) => {\n  dispatch(startLoad());\n\n  const [postsData, usersData, commentsData] = await Promise.all([\n    getPostsFromServer(),\n    getUsersFromServer(),\n    getCommentsFromServer(),\n  ]);\n\n  const allData = postsData.map(\n    post => ({\n      ...post,\n      user: usersData.find(\n        user => post.userId === user.id\n      ),\n      comments: commentsData.filter(\n        comment => post.id === comment.postId\n      ),\n    })\n  );\n\n  dispatch(handleSuccess(allData));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOAD:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        postsList: action.postsList,\n        isLoading: true,\n      };\n\n    case HANDLE_DELETE:\n      return {\n        ...state,\n        postsList: state.postsList.filter(item => item.id !== action.payload),\n        mixedPosts: state.postsList.filter(item => item.id !== action.payload),\n      };\n\n    case HANDLE_SEARCH:\n      return {\n        ...state,\n        mixedPosts: state.postsList.filter(({ title, body }) => (\n          (title + body).toLowerCase().includes(action.value))),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  postsList: [],\n  mixedPosts: null,\n  isLoaded: false,\n};\n\nconst store = createStore(reducer, initialState, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line no-shadow\nconst User = ({ name, email, address }) => (\n  <div>\n    <h3>{`Author: ${name}`}</h3>\n    <p>{`Email: ${email}`}</p>\n    <p>{`City: ${address.city}`}</p>\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    city: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line no-shadow\nconst CommentItem = ({ name, email, body }) => (\n  <div className=\"comment\">\n    <h3 className=\"comment__title\">{`Comment: ${name}`}</h3>\n    <p className=\"comment__content\">{body}</p>\n    <p className=\"comment__user-email\">{email}</p>\n  </div>\n);\n\nCommentItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n};\n\nexport default CommentItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentItem from './CommentItem';\n\nconst CommentList = ({ list }) => (\n  <div>\n    {list.map(\n      item => <CommentItem key={item.id} {...item} />\n    )}\n  </div>\n);\n\nCommentList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { handleDelete } from '../redux/store';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = (props) => {\n  // eslint-disable-next-line no-shadow\n  const { searchedText, title, body, comments, user, id, handleDelete } = props;\n\n  const highlightText = (text) => {\n    if (!searchedText) {\n      return text;\n    }\n\n    const parts = text.split(new RegExp(`(${searchedText})`, 'gi'));\n\n    return parts.map((part, i) => (\n      <React.Fragment key={`${part + i}`}>\n        {part.toLowerCase() === searchedText.toLowerCase()\n          ? <span>{part}</span>\n          : part}\n      </React.Fragment>\n    ));\n  };\n\n  return (\n    <Segment className=\"posts\" color=\"yellow\">\n      <Header as=\"h2\">\n        <span className=\"post-header\">{highlightText(title)}</span>\n        <Button\n          negative\n          onClick={() => handleDelete(id)}\n        >\n          Delete\n        </Button>\n      </Header>\n      {highlightText(body)}\n      <Segment color=\"blue\">\n        <User {...user} />\n        <CommentList list={comments} />\n      </Segment>\n    </Segment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  postsList: state.postsList,\n});\n\nPost.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.object,\n  }).isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n  searchedText: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, { handleDelete })(Post);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts, searchedResult }) => (\n  <div className=\"container\">\n    {posts.map(\n      post => (\n        <Post\n          searchedText={searchedResult}\n          key={post.id}\n          {...post}\n        />\n      )\n    )}\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  searchedResult: PropTypes.string.isRequired,\n};\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport { connect } from 'react-redux';\nimport { Input } from 'semantic-ui-react';\nimport { handleSearch, loadPosts } from './redux/store';\nimport './App.css';\n\nimport PostList from './components/PostList';\n\nconst App = (props) => {\n  const { isLoading, postsList, mixedPosts } = props;\n  const [inputValue, setInputValue] = useState('');\n\n  const loadData = async() => {\n    await props.loadPosts();\n  };\n\n  const searchPosts = debounce(query => props.handleSearch(query), 500);\n\n  const searching = ({ target }) => {\n    const value = target.value.toLowerCase().slice(0, 37);\n\n    setInputValue(value);\n    searchPosts(value);\n  };\n\n  return (\n    <div>\n      <h1 className=\"header\">Dynamic list of posts</h1>\n\n      {isLoading ? (\n        <>\n          <Input\n            type=\"search\"\n            icon=\"search\"\n            placeholder=\"Search...\"\n            onChange={searching}\n            value={inputValue}\n            className=\"search-panel\"\n          />\n\n          <PostList\n            posts={mixedPosts || postsList}\n            searchedResult={inputValue}\n          />\n        </>\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            onClick={loadData}\n          >\n            {isLoading ? 'Loading...' : 'Load'}\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  postsList: state.postsList,\n  mixedPosts: state.mixedPosts,\n  isLoading: state.isLoading,\n});\n\nApp.propTypes = {\n  handleSearch: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  postsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  mixedPosts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadPosts: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadPosts,\n    handleSearch,\n  }\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}